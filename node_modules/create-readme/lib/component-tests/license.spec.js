// Generated by CoffeeScript 2.3.2
(function() {
  var LicenseParser, mockFs;

  LicenseParser = require('../components/license.coffee');

  mockFs = require('mock-fs');

  describe("A LicenseParser", function() {
    var pkg;
    pkg = null;
    beforeEach(function() {
      pkg = require('../../package.json');
      pkg.license = "MIT";
      return pkg.git = {
        user: "dbartholomae",
        repo: "readme-creator",
        branch: "master"
      };
    });
    afterEach(function() {
      return mockFs.restore();
    });
    it("returns a full license object if the license file is found", function() {
      var licenseParser;
      mockFs({
        'LICENSE': "All your codebase are belong to us!!!11"
      });
      licenseParser = new LicenseParser();
      return expect(licenseParser.run(pkg)).to.eventually.deep.equal({
        name: 'MIT',
        file: 'LICENSE'
      });
    });
    it("returns a license object without file if no license file is found", function() {
      var licenseParser;
      mockFs();
      licenseParser = new LicenseParser();
      return expect(licenseParser.run(pkg)).to.eventually.deep.equal({
        name: 'MIT',
        file: ''
      });
    });
    it("returns null if license is not set", function() {
      var licenseParser;
      pkg.license = null;
      mockFs();
      licenseParser = new LicenseParser();
      return expect(licenseParser.run(pkg)).to.eventually.equal(null);
    });
    return it("can be configured via options", function() {
      var licenseParser;
      mockFs({
        'LICENSE.md': "All your codebase are belong to us!!!11"
      });
      licenseParser = new LicenseParser({
        licenseFile: 'LICENSE.md'
      });
      return expect(licenseParser.run(pkg)).to.eventually.deep.equal({
        name: 'MIT',
        file: 'LICENSE.md'
      });
    });
  });

}).call(this);
